// Реализуйте функцию getLanguagesStatistic, которая поможет IT журналу подвести итоги 2019 года по популярности использования языков программирования. 
// На входе функция получает массив отзывов пользователей. Необходимо вернуть объект в формате { languageName: count, anotherLanguageName: anotherCount, ... }, 
// где languageName - название языка в строке, а count - число отзывов, которые оставили программисты, использующие этот язык. 
// При этом следует учитывать только те отзывы пользователей, которые были оставлены в 2019 году. Год отзыва хранится в поле year, язык - в поле language.

const getArraysCounts = <T>(arr: T[]): Map<T, number> => {
  const map = new Map<T, number>();
  arr.forEach((element) => {
      if (!map.has(element)) {
          map.set(element, 1);
      } else {
          map.set(element, map.get(element)! + 1);
      }
  });
  return map;
};

export default getArraysCounts;

// Объявляем стрелочную функцию getArraysCounts с пустым дженериком T, которая принимает массив элементов типа T
// Возвращаемое значение — Map, где ключи с любыми типами (T), а значения с типом number.

    // Создаем новый экземпляр Map для хранения пар ключ + значение

    // Проходим по каждому элементу массива с помощью метода forEach.

        // Проверяем, есть ли текущий элемент в Map с помощью метода has.
            // Если элемента нет, добавляем его с начальным значением 1 c помощью метода set.
        // Если элемент уже есть, то 
            // С помощью метода set обновляем значение элемента в Map, увеличивая его на 1.
            // (т.к. map.get(element) при отсутсвии в элемента Map возвращает undefined, то используем оператор !, который указывает что значение не является null или undefined)

    // Возвращаем Map с подсчитанными количествами элементов.