// Реализовать класс Calc с методами sub / add / result
// В конструкторе можем передать начальное иммутабельное значение (поумолчанию 0), потом методами add и sum прибавлять и вычитать из него.
// Вызов add/sub можно объединять в цепочку (fluent interface), методы возвращают новый объект класса.
// По вызову result() получаем результат вычислений.


// Объявляем класс Calc и свойство num.
class Calc {
  num: number;

  // Объявляем конструктор класса, который принимает и присваивает num. 
  constructor(num: number = 0) {
    this.num = num;
  }

  // Метод add, который принимает число addNum и возвращает новый экземпляр Calc с обновленным значением.
    // Создаем новый экземпляр Calc, передавая в конструктор сумму текущего значения num и addNum.
  add(addNum: number): Calc {
    return new Calc(this.num + addNum);
  }

  // Метод sub, который принимает число subNum и возвращает новый экземпляр Calc с обновленным значением.
    // Создаем новый экземпляр Calc, передавая в конструктор разность текущего значения num и subNum.
  sub(subNum: number): Calc {
    return new Calc(this.num - subNum);
  }

  // Метод result, который возвращает текущее значение свойства num.
  result(): number {
    return this.num;
  }
}

export default Calc;