// Напишите функцию, которая создает объект, состоящий из инвертированных ключей и значений объекта.
// Если объект содержит повторяющиеся значения, последующие значения перезаписывают присвоения свойств предыдущих значений.

const invert = <T extends string | number | symbol>(object: Record<string, T>) => {
  const reverseArray = Object.entries(object).map(([key, value]) => [String(value), key]);
  return Object.fromEntries(reverseArray);
};

export default invert;


// Объявляем стрелочную функцию invert с дженериком Т, который ограничен типами string, number или symbol для значений объекта.
// Задаем в аргументе тип входного объекта: ключи — строки (string), значения — типа T.

  // Объявляем переменную reverseArray для массива, преобразуем объект в массив пар [ключ, значение] с помощью метода Object.entries
  // С помощью метода map для каждой пары [ключ, значение] меняем их местами, дополнительно указывая тип значения (value) как string.
  // Получаем массив, где ключи и значения исходного объекта поменялись местами.

  // Возвращаем новый объект из массива reverseArray с помощью метода Object.fromEntries 